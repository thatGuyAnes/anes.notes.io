"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[9353],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,g=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8549:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Learning Rust"},s=void 0,u={unversionedId:"notes/Rust",id:"notes/Rust",isDocsHomePage:!1,title:"Learning Rust",description:"Install",source:"@site/docs/notes/Rust.md",sourceDirName:"notes",slug:"/notes/Rust",permalink:"/notes/docs/notes/Rust",editUrl:"https://github.com/thatGuyAnes/notes/docs/notes/Rust.md",tags:[],version:"current",frontMatter:{title:"Learning Rust"},sidebar:"mySidebar",previous:{title:"Vim",permalink:"/notes/docs/"},next:{title:"Docusaurus",permalink:"/notes/docs/notes/docusaurus"}},p=[{value:"Install",id:"install",children:[],level:3},{value:"Rust files and compiler",id:"rust-files-and-compiler",children:[],level:3},{value:"Cargo: a package manager and a build tool.",id:"cargo-a-package-manager-and-a-build-tool",children:[],level:3},{value:"Rustfmt: rust formatter.",id:"rustfmt-rust-formatter",children:[],level:3},{value:"Initial Observations",id:"initial-observations",children:[],level:3},{value:"Chapter II: Programming a guessing game",id:"chapter-ii-programming-a-guessing-game",children:[],level:2}],c={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"install"},"Install"),(0,i.kt)("p",null,"Curl the following command to download and install ",(0,i.kt)("inlineCode",{parentName:"p"},"rustup")," tool:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Make sure that ",(0,i.kt)("inlineCode",{parentName:"em"},"gcc")," is installed on your machine(Linux)."))),(0,i.kt)("p",null,"The installation includes a local documentation, accessed by ",(0,i.kt)("inlineCode",{parentName:"p"},"rustup doc"),"."),(0,i.kt)("h3",{id:"rust-files-and-compiler"},"Rust files and compiler"),(0,i.kt)("p",null,"Rust files have the .rs extension\n",(0,i.kt)("inlineCode",{parentName:"p"},"rustc")," is the compiler."),(0,i.kt)("h3",{id:"cargo-a-package-manager-and-a-build-tool"},"Cargo: a package manager and a build tool."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"we can use cargo to initialize a rust project with ",(0,i.kt)("inlineCode",{parentName:"li"},"cargo new"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cargo new")," creates a project with a .git, if the project is inside a repo,\n",(0,i.kt)("inlineCode",{parentName:"li"},"cargo new")," will note create a new repo. To override this , we pass ",(0,i.kt)("inlineCode",{parentName:"li"},"--vcs=git"),"\noption to ",(0,i.kt)("inlineCode",{parentName:"li"},"cargo new")," command like this: ",(0,i.kt)("inlineCode",{parentName:"li"},"cargo new my_project --vcs=git"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"This ",(0,i.kt)("inlineCode",{parentName:"strong"},"cargo")," can be used to"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Build a project: ",(0,i.kt)("inlineCode",{parentName:"li"},"cargo build")),(0,i.kt)("li",{parentName:"ul"},"Compile and run the code: ",(0,i.kt)("inlineCode",{parentName:"li"},"cargo run")),(0,i.kt)("li",{parentName:"ul"},"Checks the code and make sure it compiles: ",(0,i.kt)("inlineCode",{parentName:"li"},"cargo check"))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"These commands are self descriptive !!!")),(0,i.kt)("h3",{id:"rustfmt-rust-formatter"},"Rustfmt: rust formatter."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"rustfmt")," formats code in a particular style."),(0,i.kt)("h3",{id:"initial-observations"},"Initial Observations"),(0,i.kt)("p",null,"So in rust there exist function and macros; ",(0,i.kt)("inlineCode",{parentName:"p"},"println!")," calls a macro where\n",(0,i.kt)("inlineCode",{parentName:"p"},"printls")," (without ",(0,i.kt)("inlineCode",{parentName:"p"},"!"),") calls a function."),(0,i.kt)("p",null,"Same as with a say a webpack project, ",(0,i.kt)("inlineCode",{parentName:"p"},"cargo"),' build a "dev" version and a\nrelease version using respectively ',(0,i.kt)("inlineCode",{parentName:"p"},"cargo build")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"cargo build --release"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"build")," outputs to a ",(0,i.kt)("inlineCode",{parentName:"li"},"target/debug")," directory"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"build --release")," outputs to a ",(0,i.kt)("inlineCode",{parentName:"li"},"target/release")," dir.")),(0,i.kt)("h2",{id:"chapter-ii-programming-a-guessing-game"},"Chapter II: Programming a guessing game"),(0,i.kt)("p",null,"So in rust, variable are immutable by default.\nWe must use ",(0,i.kt)("inlineCode",{parentName:"p"},"mut")," keyword to indicate that this variable is mutable.\n(very interesting!!!)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"let mut myVar = String::new();\n")),(0,i.kt)("p",null,"The variable is bound to ",(0,i.kt)("inlineCode",{parentName:"p"},"String::new()"),"; A bit weird but it simply\nimplies that our value is a new instance of an empty String, the result of\ncalling a 'String::new()' function."),(0,i.kt)("p",null,"Also the ",(0,i.kt)("inlineCode",{parentName:"p"},"new")," here in",(0,i.kt)("inlineCode",{parentName:"p"},"::new")," is referred to as 'associated function'."))}m.isMDXComponent=!0}}]);