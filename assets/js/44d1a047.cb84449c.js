"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[2001],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8514:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={title:"Utils"},s=void 0,u={unversionedId:"linux/utils",id:"linux/utils",isDocsHomePage:!1,title:"Utils",description:"Network password",source:"@site/docs/linux/utils.md",sourceDirName:"linux",slug:"/linux/utils",permalink:"/notes/docs/linux/utils",editUrl:"https://github.com/thatGuyAnes/notes/docs/linux/utils.md",tags:[],version:"current",frontMatter:{title:"Utils"},sidebar:"mySidebar",previous:{title:"i3wm",permalink:"/notes/docs/linux/i3"},next:{title:"Vim",permalink:"/notes/docs/"}},p=[{value:"Network password",id:"network-password",children:[],level:3},{value:"Installed packages(Fedora)",id:"installed-packagesfedora",children:[],level:3},{value:"Create bootable USB from ISO image",id:"create-bootable-usb-from-iso-image",children:[],level:3},{value:"Installing fonts:",id:"installing-fonts",children:[],level:3}],c={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"network-password"},"Network password"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"list connections:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Bash"},"$ ls /etc/NetworkManager/system-connections\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"display passwords:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Bash"},"# grep psk= /etc/NetworkManager/system-connections/*\n")),(0,l.kt)("h3",{id:"installed-packagesfedora"},"Installed packages(Fedora)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"List all user-installed packages:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Bash"},"$ dnf repoquery --qf '%{name}' --userinstalled \\\n | grep -v -- '-debuginfo$' \\\n | grep -v '^\\(kernel-modules\\|kernel\\|kernel-core\\|kernel-devel\\)$' > pkgs.lst\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Install from list:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Bash"},"# < pkgs.lst xargs dnf -y install\n")),(0,l.kt)("h3",{id:"create-bootable-usb-from-iso-image"},"Create bootable USB from ISO image"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Identify device with ",(0,l.kt)("inlineCode",{parentName:"li"},'$ lsblk -p | grep "disk"')," or ",(0,l.kt)("inlineCode",{parentName:"li"},"$ df -hT")),(0,l.kt)("li",{parentName:"ul"},"Unmount device: ",(0,l.kt)("inlineCode",{parentName:"li"},"# umout [DEVICE_NAME]")),(0,l.kt)("li",{parentName:"ul"},"Write ISO to USB: ",(0,l.kt)("inlineCode",{parentName:"li"},"# dd if=[ISO_FILE] of=[DEVICE_NAME] bs=4M conv=fdatasync status=progress"))),(0,l.kt)("h3",{id:"installing-fonts"},"Installing fonts:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Download the font package.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Extract the files from the archive.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Copy the font files to a system font folder:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/usr/share/fonts/")," (system font folder)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"~/.local/share/fonts/")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"/usr/local/share/fonts")," (user font folder)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Regenerate the font cache and indexes:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"# fc-cache -fv"))))))}m.isMDXComponent=!0}}]);